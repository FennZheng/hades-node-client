// Generated by CoffeeScript 1.3.3
(function() {
  var IConfig, Module, RemoteConfig, RemoteConfigCache, ZkProxy, _instance,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Module = require('../../lib/module').Module;

  IConfig = require('./i_config').IConfig;

  ZkProxy = require('../zk/zk_proxy').ZkProxy;

  RemoteConfigCache = require('./remote_config_cache').RemoteConfigCache;

  RemoteConfig = (function(_super) {

    __extends(RemoteConfig, _super);

    RemoteConfig.include(IConfig);

    function RemoteConfig() {
      ZkProxy.on("event");
      ZkProxy.load();
    }

    RemoteConfig.prototype.get = function(name) {
      if (!(name != null) || (name.length >= 5 && name.slice(-5, -1) === ".json")) {
        throw new Error("config can not end with .json");
      }
      if (ZkProxy.checkLoadState()) {
        return RemoteConfigCache[name];
      } else {

      }
    };

    RemoteConfig.prototype.getDynamic = function(name) {
      if (!(name != null) || (name.length >= 5 && name.slice(-5, -1) === ".json")) {
        throw new Error("config can not end with .json");
      }
      if (ZkProxy.checkLoadState()) {
        return RemoteConfigCache[name];
      } else {

      }
    };

    return RemoteConfig;

  })(Module);

  _instance = new RemoteConfig();

  exports.RemoteConfig = _instance;

}).call(this);
